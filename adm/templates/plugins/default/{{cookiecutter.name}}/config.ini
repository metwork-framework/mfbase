[general]

# Notes about the name of the plugin:
# - the name of the plugin is given by the content of .layerapi2_label
#   in this directory (format: plugin_{name of the plugin}@mfbase)
# - the old "name" key in this file is not used anymore

# Version of the plugin (X.Y.Z)
# If the value is {% raw %}{{MFMODULE_VERSION}}{% endraw %},
# the current module version is used
_version={{cookiecutter.version}}

# Summary (one line) of the goal of the plugin
_summary={{cookiecutter.one_line_summary}}

# License of the plugin
_license={{cookiecutter.license}}

# URL of the plugin homepage
_url={{cookiecutter.url}}

# Name of the maintainer of the plugin on the form "Firstname FAMILYNAME <email>"
_maintainer={{cookiecutter.maintainer}}

# Vendor of the plugin
_vendor={{cookiecutter.vendor}}

# If you want a dedicated postgresql database for your plugin, set to 1 (else 0)
_use_postgresql={% if cookiecutter.use_postgresql == "no" %}0{% else %}1{% endif %}

# If you want a dedicated webdav storage directory for your plugin, set to 1 (else 0)
_use_storage={% if cookiecutter.use_storage == "no" %}0{% else %}1{% endif %}

# Coma separated nginx allow values for HTTP storage requests
# http://nginx.org/en/docs/http/ngx_http_access_module.html#allow
# by default (all) everything is open, but if you change this only
# what you configured will be authorized
# example: storage_access_allows=192.168.1.1,192.168.2.0/24
# empty (or "null") value means => everything is forbidden
storage_access_allows=all

# htpasswd filename (relative to the plugin directory) to restrict access
# by username/password for HTTP storage requests
# If the path startswith /, we consider this is an absolute path, else
# this is relative to plugin directory.
# See this guide to make htpasswd files:
# https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/
# (null => no auth necessary)
storage_auth_passwd_filename=null

# if storage_access_allows != all and storage_read_auth_passwd_filename != null
# specify if both limitations must be valid ("all") or at least one ("any")
storage_satisfy=all

# Can be use to forbid some dav methods for this plugin
# (accepted dav methods at module level is available in ${MFBASE_NGINX_STORAGE_DAV_METHODS})
# (coma separated list, null => nothing is forbiden)
storage_forbidden_dav_methods=null
