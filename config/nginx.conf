# General Configuration
daemon off;
worker_processes {{MFBASE_NGINX_WORKERS}};
{% if MFBASE_LOG_DEFAULT_LEVEL == "DEBUG" %}
error_log  {{MFMODULE_RUNTIME_HOME}}/log/nginx_error.log debug;
{% else %}
error_log  {{MFMODULE_RUNTIME_HOME}}/log/nginx_error.log error;
{% endif %}
pid        {{MFMODULE_RUNTIME_HOME}}/var/nginx.pid;

# Main Loop Configuration
events {
    worker_connections  10000;
}

# HTTP Configuration
http {

    include       {{MFMODULE_RUNTIME_HOME}}/tmp/config_auto/mime.types;
    default_type  text/plain;
    # FIXME: ugly hack with ~~~1 and ~~~~2 to circumvent nginxfmt problem with JSON
    log_format main '~~~1 "@timestamp": "$time_iso8601", "from": "$remote_addr", "method": "$request_method", "uri": "$request_uri", "duration": $request_time, "status": $status, "request_length": $request_length, "reply_length": $bytes_sent ~~~2';
    access_log  {{MFMODULE_RUNTIME_HOME}}/log/nginx_access.log  main;
    client_body_temp_path {{MFBASE_NGINX_CLIENTBODY_TEMP_PATH}};
    client_max_body_size {{MFBASE_NGINX_UPLOAD_MAX_BODY_SIZE}}m;

    server {

        listen unix:{{MFMODULE_RUNTIME_HOME}}/var/nginx.socket backlog=40000;
        {% if MFBASE_NGINX_PORT != "0" %}
        listen {{MFBASE_NGINX_PORT}} backlog=40000;
        {% endif %}

        location ~ ^/status$ {
            stub_status on;
            access_log off;
        }

         # Monitoring service to avoid nginx worker zombies
        # FIXME: rename this in __uuid
        location = /uuid {
            allow 127.0.0.1/32;
            deny all;
            echo "{{UUID}}";
            access_log off;
            set $plugin "#monitoring#";
        }

        {% for PLUGIN in PLUGINS %}
            {% if PLUGIN.use_storage  == "1"%}
                location /storage/{{PLUGIN.name}} {
                    alias {{MFBASE_NGINX_STORAGE_DIR}}/{{PLUGIN.name}};
                    {% if MFBASE_NGINX_STORAGE_CREATE_FULL_PUT_PATH == "1" %}
                        create_full_put_path on;
                    {% endif %}
                    dav_methods {{MFBASE_NGINX_STORAGE_DAV_METHODS}};
                    min_delete_depth {{MFBASE_NGINX_STORAGE_MIN_DELETE_DEPTH}};
                    {% if MFBASE_NGINX_STORAGE_AUTOINDEX == "1" %}
                        autoindex on;
                    {% endif %}
                }
            {% endif %}
        {% endfor %}

        location /storage {
            alias {{MFBASE_NGINX_STORAGE_DIR}};
            {% if MFBASE_NGINX_STORAGE_AUTOINDEX == "1" %}
                autoindex on;
            {% endif %}
        }

        location / {
            alias {{MFBASE_HOME}}/share/welcome/;
            index index.html;
                autoindex on;
        }

    }

}
